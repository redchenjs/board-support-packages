name: tinkerboard-android

on:
  workflow_dispatch:
  # schedule:
    # - cron: 00 18 * * *

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Set environment variables
        shell: bash {0}
        run: |
          echo "RELEASE_VERSION=14.4.0.23" >> $GITHUB_ENV
      - name: Compile Android packages
        shell: bash {0}
        run: |
          sudo apt update
          sudo apt install make gcc python gcc-multilib bc lzop sudo m4 zip git \
          curl openjdk-8-jdk libxml2-utils kmod g++-multilib python3 libncurses5 \
          rsync

          mkdir -p ~/.bin
          PATH="${HOME}/.bin:${PATH}"
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+rx ~/.bin/repo

          mkdir tinker && cd tinker
          repo init -u https://github.com/TinkerBoard-Android/manifest.git -b n-mr1-rk3288-tb -m ${{ env.RELEASE_VERSION }}.xml
          repo sync

          cp ../patches/kernel/*.patch kernel/
          cd kernel && git apply *.patch

          git config --global user.name "${{ secrets.GIT_COMMIT_USERNAME }}"
          git config --global user.email "${{ secrets.GIT_COMMIT_EMAIL }}"
          git commit -a -m "update to v${{ env.RELEASE_VERSION }}" || true

          cd ../docker_builder
          sudo cp java.security /etc/java-8-openjdk/security/java.security

          export LC_ALL=C
          cd .. && ./build.sh

          tar -czf Image-rk3288.tar.gz rockdev/Image-rk3288
      - name: Generate package checksums
        shell: bash {0}
        run: |
          mkdir artifacts
          for file in *.tar.gz; do
            sudo bash -c "sha512sum $file | sed -r 's|([0-9a-z]+).*|\1|g' > $file.sha512sum"
            sudo mv $file* artifacts/
          done
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          release_name: Release v${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
      - name: Upload release assets
        uses: NBTX/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          targets: artifacts/*
